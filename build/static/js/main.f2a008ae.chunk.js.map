{"version":3,"sources":["services/persons.js","components/App.js","index.js"],"names":["baseUrl","exp","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","changedPerson","Notification","messageObj","message","style","Filter","props","value","newFilter","onChange","event","setNewFilter","target","PersonForm","onSubmit","addPerson","newName","setNewName","newNumber","setNewNumber","type","Persons","persons","setPersonsFunc","phonebook","filter","person","name","toLowerCase","includes","map","number","onClick","window","confirm","personServices","returnedPerson","newPersons","p","App","useState","setPersons","setMessage","useEffect","initialPersons","preventDefault","personObj","find","alert","updatedPerson","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2a008ae.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = 'https://vast-coast-33181.herokuapp.com/api/persons';\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst put = (id, changedPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, changedPerson)\r\n    return request.then(response => response.data)\r\n}\r\nconst exp = { getAll, create, update, remove, put };\r\nexport default exp;","import React, { useEffect, useState } from 'react'\r\nimport personServices from '../services/persons'\r\n\r\nconst Notification = ({messageObj}) => {\r\n    if(messageObj.message == null){\r\n        return null;\r\n    }\r\n    const notifStyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    return(\r\n        <div style={messageObj.style}>\r\n            {messageObj.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = (props) => {\r\n    const handleFilterChange =(event) => {\r\n        props.setNewFilter(event.target.value);\r\n    }\r\n    return(\r\n        <div>\r\n            filter shown with <input value={props.newFilter} onChange={handleFilterChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n    const handleNameChange = (event) => {\r\n        props.setNewName(event.target.value);\r\n    }\r\n    const handleNumberChange = (event) => {\r\n        props.setNewNumber(event.target.value);\r\n    }\r\n    return(\r\n        <form onSubmit={props.addPerson}>\r\n            <div>name: <input value={props.newName} onChange={handleNameChange} /></div>\r\n            <div>number: <input value={props.newNumber} onChange={handleNumberChange} /></div>\r\n            <div><button type=\"submit\">add</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Persons = ({persons, newFilter, setPersonsFunc}) => {\r\n\r\n    const phonebook = persons.filter((person) => person.name.toLowerCase().includes(newFilter.toLowerCase())).map((person) => {\r\n        return <li key={person.name}>{person.name} - {person.number} <button onClick={() => {\r\n            if (window.confirm(`Delete ${person.name}?`)) {\r\n                personServices\r\n                .remove(person.id)\r\n                .then((returnedPerson) => {\r\n                    const newPersons = persons.filter(p => p.id !== person.id);\r\n                    setPersonsFunc(newPersons);\r\n                })\r\n            }\r\n        }}>Delete</button></li>\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <ul>\r\n            {phonebook}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([]);\r\n    const [ newName, setNewName ] = useState('');\r\n    const [ newNumber, setNewNumber ] = useState('');\r\n    const [ newFilter, setNewFilter ] = useState('');\r\n    const [ message, setMessage ] = useState({message: null, style: {}})\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault();\r\n        const personObj = {\r\n            name: newName,\r\n            number: newNumber\r\n        };\r\n        \r\n        const person = persons.find(p => p.name === personObj.name);\r\n        if(!person){\r\n            personServices\r\n            .create(personObj)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson));\r\n                setNewName('');\r\n                setNewNumber('');\r\n                setMessage({\r\n                    message: `Added ${returnedPerson.name}`,\r\n                    style: {\r\n                        color: 'green',\r\n                        background: 'lightgrey',\r\n                        fontSize: 20,\r\n                        borderStyle: 'solid',\r\n                        borderRadius: 5,\r\n                        padding: 10,\r\n                        marginBottom: 10\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    setMessage({message: null, style: {}})\r\n                }, 3000)\r\n            })\r\n        }else{\r\n            if(person.number === personObj.number){\r\n                alert(`${person.name} is already added to phonebook`);\r\n            }else{\r\n                //update phone number\r\n                if (window.confirm(`${person.name} is already added to your phonebook, replace the old number with a new one?`)) {\r\n                    personServices\r\n                    .put(person.id, personObj)\r\n                    .then(updatedPerson => {\r\n                        setPersons(persons.map(p => p.id !== person.id ? p : updatedPerson));\r\n                        setNewName('');\r\n                        setNewNumber('');\r\n                        setMessage({\r\n                            message: `${person.name} was sucessfully edited`,\r\n                            style: {\r\n                                color: 'green',\r\n                                background: 'lightgrey',\r\n                                fontSize: 20,\r\n                                borderStyle: 'solid',\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                marginBottom: 10\r\n                            }\r\n                        });\r\n                        setTimeout(() => {\r\n                            setMessage({message: null, style: {}})\r\n                        }, 3000)\r\n                    })\r\n                    .catch(error => {\r\n                        setMessage({\r\n                            message: `Information of '${person.name}' has already been removed from server`,\r\n                            style: {\r\n                                color: 'red',\r\n                                background: 'lightgrey',\r\n                                fontSize: 20,\r\n                                borderStyle: 'solid',\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                marginBottom: 10\r\n                            }\r\n                        });\r\n                        setTimeout(() => {\r\n                            setMessage({message: null, style: {}})\r\n                        }, 5000)\r\n                        setPersons(persons.filter(p => p.id !== person.id))\r\n                    })\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        personServices\r\n        .getAll()\r\n        .then(initialPersons => {\r\n            setPersons(initialPersons);\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification messageObj={message} />\r\n            <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\r\n            <h3>add a new</h3>\r\n            <PersonForm addPerson={addPerson} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={persons} newFilter={newFilter} setPersonsFunc={setPersons} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}